name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [frontend, backend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.directory }}/package-lock.json
    
    - name: Install dependencies
      run: |
        cd ${{ matrix.directory }}
        npm ci
    
    - name: Run linter
      run: |
        cd ${{ matrix.directory }}
        npm run lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [frontend, backend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.directory }}/package-lock.json
    
    - name: Install dependencies
      run: |
        cd ${{ matrix.directory }}
        npm ci
    
    - name: Run tests
      run: |
        cd ${{ matrix.directory }}
        npm test -- --coverage --watchAll=false
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./${{ matrix.directory }}
        flags: ${{ matrix.directory }}

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.frontend
        push: false
        tags: vpofone/frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.backend
        push: false
        tags: vpofone/backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  e2e:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Start services
      run: docker-compose up -d
    
    - name: Wait for services
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:80; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:3000/health; do sleep 2; done'
    
    - name: Run E2E tests
      run: |
        cd frontend
        npm ci
        npm run e2e:ci
    
    - name: Stop services
      if: always()
      run: docker-compose down -v